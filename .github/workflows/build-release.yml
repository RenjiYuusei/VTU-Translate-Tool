name: Build Release APK

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create local.properties
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        
    - name: Setup keystore from secrets
      run: |
        echo "Setting up keystore from GitHub secrets..."
        
        # Decode base64 keystore
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > Yuusei.jks
        
        # Verify keystore was created successfully
        if [ -f "Yuusei.jks" ] && [ -s "Yuusei.jks" ]; then
          echo "✅ Keystore file created successfully"
          echo "Keystore size: $(stat -c%s Yuusei.jks) bytes"
        else
          echo "❌ Failed to create keystore file or file is empty"
          exit 1
        fi
        
        echo "✅ Release signing configured with secrets"
        echo "Keystore setup completed successfully"
        
    - name: Build release APK
      env:
        KEYSTORE_FILE: Yuusei.jks
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: ./gradlew assembleRelease --stacktrace
      
    - name: Get commit info
      id: commit
      run: |
        echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "commit_msg=$(git log -1 --pretty=%B | head -1)" >> $GITHUB_OUTPUT
        echo "build_date=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
        
    - name: Rename APK file
      run: |
        mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/VTU-Translate-release-${{ steps.commit.outputs.short_sha }}.apk
        
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: VTU-Translate-release-${{ steps.commit.outputs.build_date }}
        path: app/build/outputs/apk/release/VTU-Translate-release-${{ steps.commit.outputs.short_sha }}.apk
        retention-days: 90
        
    - name: Build summary
      run: |
        echo "## 🚀 Release Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ steps.commit.outputs.short_sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Message**: ${{ steps.commit.outputs.commit_msg }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Date**: ${{ steps.commit.outputs.build_date }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Signed**: ✅ Yes (using Yuusei.jks)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Download Release APK" >> $GITHUB_STEP_SUMMARY
        echo "The signed release APK is available in the **Artifacts** section." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Release APK**: VTU-Translate-release-${{ steps.commit.outputs.build_date }}" >> $GITHUB_STEP_SUMMARY
